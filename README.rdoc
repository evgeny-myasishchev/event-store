== EventStore {<img src="https://travis-ci.org/evgeny-myasishchev/event-store.svg?branch=master" alt="Build Status" />}[https://travis-ci.org/evgeny-myasishchev/event-store] {<img src="https://codeclimate.com/github/evgeny-myasishchev/event-store.png" />}[https://codeclimate.com/github/evgeny-myasishchev/event-store] {<img src="https://codeclimate.com/github/evgeny-myasishchev/event-store/coverage.png" />}[https://codeclimate.com/github/evgeny-myasishchev/event-store]
Ruby implementation of the event store. Inspired by NEventStore.

=== Installation (Gemfile)

  gem 'event-store', github: 'evgeny-myasishchev/event-store'
  
=== Sample

  # Bootstrap
  store = EventStore.bootstrap do |with|
    with.console_logging
    with.in_memory_persistence
  end
  
  # Create new stream
  stream = store.create_stream(employee_id)
  stream.add EventMessage.new EmployeeHired.new(employee_id, full_name)
  store.transaction do |t|
    stream.commit_changes t
  end
  
  # Add new events to existing stream
  stream = store.open_stream(employee_id)
  stream.add EventMessage.new EmployeeResigned.new(employee_id, reason)
  @store.transaction do |t|
    stream.commit_changes t
  end

A complete sample is here: link:doc/sample.rb

=== General Features

* SQL persistence 
* Atomic multistream commits (if supported by underlying persistance engine)
* JSON, YAML and Marshal serialization
* Compression

=== Planned

* NOSQL persistence
* Events polling
* Documentation
